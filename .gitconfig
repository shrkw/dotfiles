[include]
    path = ~/.gitconfig.local
[color]
    ui = auto
    status = auto
    diff = auto
    branch = auto
    interactive = auto
[alias]
    alias = !git config --get-regexp '^alias\\.' | sed 's/alias\\.\\([^ ]*\\) \\(.*\\)/\\1\\\t => \\2/' | sort
    refresh = !git fetch origin && git remote prune origin
    ps-here = !git push origin `git rev-parse --abbrev-ref HEAD`
    pl-here = !git pull origin `git rev-parse --abbrev-ref HEAD`
    conflicts = !git ls-files -u | cut -f 2 | sort -u
    cm = commit
    co = checkout
    st = status --branch --short
    s = !git st
    di = diff --color
    gr = grep --line-number --show-function --color --heading --break
    delete-branches = !for b in $(git branch -l | cut -d' ' -f3); do git branch -d $b; done

    # log
    log-oneline = log --graph --oneline --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'
    log-stat= log --format=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
    log-patch = log --decorate --stat --patch
    log-files = log --name-status

    # obsolute
    log1 = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
    log2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
[core]
    editor = vim -c \"set fenc=utf-8\"
    excludesfile = ~/.gitignore_global
[init]
	templatedir = ~/.git-templates
[push]
    default = simple
[commit]
	template = ~/.git-templates/commit_template
